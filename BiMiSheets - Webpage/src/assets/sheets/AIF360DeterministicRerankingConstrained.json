{
    "filename": "AIF360DeterministicRerankingConstrained",
    "metadata":
    {
        "name": "Deterministic Reranking - Constrained",
        "authors": "AIF360",
        "version": "0.6.1",
        "license": "Apache 2.0",
        "source_paper": "\\textit{Fairness-Aware Ranking in Search \\& Recommendation Systems with Application to LinkedIn Talent Search} \\cite{geyik2019fairness}"
    },
    "description":
    {
        "method_type": ["Re-ranking"],
        "task": ["Ranking"],
        "compatible_data": ["Dataset Independent"],
        "method_description":"Starting with 0, increase the value of k until the minimum representation constraint is increased for at least one group. If there are more than one such groups, order them according to the descending score of their highest-scoring candidates not yet in the ranking. For each group in the list above: 1. Insert the next candidate from the group to the next empty index in the ranking Swap the candidate towards earlier indices until: Either the score of the candidate in the earlier index is larger, or, 2. Swapping will violate the minimum condition for the group of the candidate in the earlier index."
    },
    "pipeline":
    {
        "pipeline_location": "Post-processing",
        "compatible_model": ["Any score-based ranker"],
        "model_description": "Deterministic Reranking takes as input a list of output scores (for a each member of a list of candidates) of a ranker. Candidates are by convention assumed to be ordered by decreasing score by the initial ranker."
    },
    "fairness":
    {
        "composition_features": ["Categorical Attributes"],
        "fairness_guarantee": "Fairness guaranteed",
        "fairness_type": ["Group Fairness"],
        "fairness_definitions": ["Adjusted Demographic Parity"],
        "fairness_description": "The Deterministic Reranker allows to set a desired proportion $p_a$ per demographic group $ a $. Given k samples, the algorithm ensures that the number of selected candidates from each group $n_a$ satisfies $ \\lfloor p_a * k \\rfloor \\leq n_a \\leq \\lceil p_a * k \\rceil $."
    },
    "implementation":
    {
        "packages": [{"programming_language": "python",
                      "related_packages": ["scikit-learn"] }],
        "description": "The dataset must be passed in the AIF360 used format."
    },
    "use_cases": 
    {
        "cases": ["Synthetic Dataset"],
        "description": "The original paper also tested the method on a proprietary dataset."
    },
    "bibliography": [" @inproceedings{geyik2019fairness, title={Fairness-aware ranking in search \\& recommendation systems with application to linkedin talent search}, author={Geyik, Sahin Cem and Ambler, Stuart and Kenthapadi, Krishnaram}, booktitle={Proceedings of the 25th acm sigkdd international conference on knowledge discovery \\& data mining}, pages={2221--2231}, year={2019}"]
}
