{
    "filename": "AIF360DeterministicRerankingGreedy",
    "metadata":
    {
        "name": "Deterministic Reranking - Greedy",
        "authors": "AIF360",
        "version": "0.6.1",
        "license": "Apache 2.0",
        "source_paper": "\\textit{Fairness-Aware Ranking in Search \\& Recommendation Systems with Application to LinkedIn Talent Search} \\cite{geyik2019fairness}"
    },
    "description":
    {
        "method_type": ["Re-ranking"],
        "task": ["Ranking"],
        "compatible_data": ["Dataset Independent"],
        "method_description":"The attribute value with the highest next score among those that have not yet met their desired proportion is chosen. However, if there are any attribute values for which the desired proportion is about to be violated, the one with the highest next score among them is chosen."
    },
    "pipeline":
    {
        "pipeline_location": "Post-Processing",
        "compatible_model": ["Score-based ranker"],
        "model_description": "If there are any groups for which the minimum representation constraint is violated (the proportion of the group in the ranking is too small), choose the element with the highest score among those groups. Otherwise, choose the element with the highest score among groups that do not violate the maximum constraint (i.e. aren't overrepresented)."
    },
    "fairness":
    {
        "composition_features": ["Categorical Attributes"],
        "fairness_guarantee": "Fairness Guaranteed",
        "fairness_type": ["Group Fairness"],
        "fairness_definitions": ["Adjusted Demographic Parity"],
        "fairness_description": "The Deterministic Reranker allows to set a desired proportion $p_a$ per demographic group $ a $. Given k samples, the algorithm ensures that the number of selected candidates from each group $n_a$ satisfies $ \\lfloor p_a * k \\rfloor \\leq n_a \\leq \\lceil p_a * k \\rceil $."
    },
    "implementation":
    {
        "packages": [{"programming_language": "Python",
                      "related_packages": ["scikit-learn"] }],
        "description": "The dataset must be passed in the AIF360 used format."
    },
    "use_cases": 
    {
        "cases": ["Synthetic Dataset"],
        "description": "The original paper also tested the method on a proprietary dataset."
    },
    "bibliography": [" @inproceedings{geyik2019fairness, title={Fairness-aware ranking in search \\& recommendation systems with application to linkedin talent search}, author={Geyik, Sahin Cem and Ambler, Stuart and Kenthapadi, Krishnaram}, booktitle={Proceedings of the 25th acm sigkdd international conference on knowledge discovery \\& data mining}, pages={2221--2231}, year={2019}"]
}
